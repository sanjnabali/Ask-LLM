services:
  - type: web
    name: document-analysis-system
    env: python
    plan: starter

    buildCommand: |
      echo "Current directory: $(pwd)"
      echo "Files in current directory:"
      ls -la
      echo "Files in scripts directory (if exists):"
      ls -la scripts/ || echo "No scripts directory found"

      python --version

      apt-get update && apt-get install -y \
        build-essential \
        libffi-dev \
        libssl-dev \
        python3-dev \
        pkg-config \
        libmupdf-dev \
        libjpeg-dev \
        zlib1g-dev \
        cmake \
        gcc \
        g++

      pip install --upgrade pip setuptools wheel

      export CARGO_HOME=/tmp/.cargo
      export CARGO_TARGET_DIR=/tmp/.cargo-target

      if [ -f "scripts/main.py" ]; then
        echo "Copying main.py from scripts/ to root directory..."
        cp scripts/main.py ./main.py
      elif [ -f "main.py" ]; then
        echo "main.py already exists in root directory"
      else
        echo "ERROR: main.py not found!"
        find . -name "*.py" -type f
        exit 1
      fi

      echo "Verifying main.py..."
      [ -f "main.py" ] && head -n 5 main.py || exit 1

      pip install --no-cache-dir torch==2.5.1 --index-url https://download.pytorch.org/whl/cpu
      pip install --no-cache-dir numpy==2.1.3
      pip install --no-cache-dir -r requirements.txt

      python -c "import torch; print('PyTorch:', torch.__version__)"
      python -c "import numpy; print('NumPy:', numpy.__version__)"
      python -c "import sentence_transformers; print('SentenceTransformers: OK')" || echo "SentenceTransformers fallback"
      python -c "import main; print('✅ main.py imports successfully')" || echo "❌ main.py import failed"

    startCommand: uvicorn main:app --host 0.0.0.0 --port $PORT

    envVars:
      - key: PYTHON_VERSION
        value: 3.12.4

      - key: GEMINI_API_KEY
        sync: false

      - key: PINECONE_API_KEY
        sync: false

      - key: PINECONE_ENVIRONMENT
        value: us-east-1-aws

      - key: INDEX_NAME
        value: askllm

      - key: PYTHONUNBUFFERED
        value: "1"

      - key: PYTHONDONTWRITEBYTECODE
        value: "1"

      - key: CARGO_HOME
        value: /tmp/.cargo

      - key: CARGO_TARGET_DIR
        value: /tmp/.cargo-target

      - key: TORCH_CUDA_ARCH_LIST
        value: ""

      - key: CUDA_VISIBLE_DEVICES
        value: ""

      - key: MALLOC_ARENA_MAX
        value: "2"

      - key: TOKENIZERS_PARALLELISM
        value: "false"

    healthCheckPath: /health
    autoDeploy: true
    buildTimeout: 30m
